/**
 *  	Error/flag code of packet protocol
 */

/*  
 *  Copyright (c) 2021-current Suprema AI Inc. All Rights Reserved.
 * 
 *  This software is the confidential and proprietary information of 
 *  Suprema AI Inc. ("Confidential Information").  You shall not
 *  disclose such Confidential Information and shall use it only in
 *  accordance with the terms of the license agreement you entered into
 *  with Suprema.
 */

#ifndef __QFM_SDK_ERROR_H__
#define __QFM_SDK_ERROR_H__

#include "QF_Def.h"

typedef enum
{
	QF_RET_SUCCESS = 0,

	// serial communication error
	QF_ERR_CANNOT_OPEN_SERIAL = -1,
	QF_ERR_CANNOT_SETUP_SERIAL = -2,
	QF_ERR_CANNOT_WRITE_SERIAL = -3,
	QF_ERR_WRITE_SERIAL_TIMEOUT = -4,
	QF_ERR_CANNOT_READ_SERIAL = -5,
	QF_ERR_READ_SERIAL_TIMEOUT = -6,
	QF_ERR_CHECKSUM_ERROR = -7,
	QF_ERR_CANNOT_SET_TIMEOUT = -8,

	// socket error
	QF_ERR_CANNOT_START_SOCKET = -301,
	QF_ERR_CANNOT_OPEN_SOCKET = -302,
	QF_ERR_CANNOT_CONNECT_SOCKET = -303,
	QF_ERR_CANNOT_READ_SOCKET = -304,
	QF_ERR_READ_SOCKET_TIMEOUT = -305,
	QF_ERR_CANNOT_WRITE_SOCKET = -306,
	QF_ERR_WRITE_SOCKET_TIMEOUT = -307,

	// generic command error code
	QF_ERR_FAILED = -100,
	QF_ERR_SCAN_FAIL = -101,
	QF_ERR_NOT_FOUND = -102,
	QF_ERR_NOT_MATCH = -103,
	QF_ERR_TRY_AGAIN = -104,
	QF_ERR_TIME_OUT = -105,
	QF_ERR_MEM_FULL = -106,
	QF_ERR_EXIST_ID = -107,
	QF_ERR_FACE_TEMPLATE_LIMIT = -108,
	QF_ERR_UNSUPPORTED = -109,
	QF_ERR_INVALID_ID = -110,
	QF_ERR_TIMEOUT_MATCH = -111,
	QF_ERR_BUSY = -112,
	QF_ERR_CANCELED = -113,
	QF_ERR_DATA_ERROR = -114,
	QF_ERR_EXIST_FACE = -115,
	QF_ERR_FAKE_DETECTED = -122,
	QF_ERR_OUT_OF_MEMORY = -200,
	QF_ERR_INVALID_PARAMETER = -201,
	QF_ERR_FILE_IO = -202,
	QF_ERR_INVALID_FILE = -203,
	QF_ERR_INVALID_FIRMWARE = -204,
	QF_ERR_RECOVERY_MODE = -401,
	QF_ERR_NO_SERIAL_NUMBER = -402,
	QF_ERR_INVALID_DATABASE_FORMAT = -403,
	QF_ERR_WRONG_IMAGE_FORMAT = -404,
	QF_ERR_WRONG_IMAGE_SIZE = -405,
	QF_ERR_SECURE_CODE_VERIFICATION_FAIL = -501,
	QF_ERR_UNKNOWN = -9999,
} QF_RET_CODE;

typedef enum
{
	QF_PROTO_RET_FAILED = 0x60,
	QF_PROTO_RET_SUCCESS = 0x61,
	QF_PROTO_RET_SCAN_SUCCESS = 0x62,
	QF_PROTO_RET_SCAN_FAIL = 0x63,
	QF_PROTO_RET_NOT_FOUND = 0x69,
	QF_PROTO_RET_NOT_MATCH = 0x6A,
	QF_PROTO_RET_TRY_AGAIN = 0x6B,
	QF_PROTO_RET_TIME_OUT = 0x6C,
	QF_PROTO_RET_MEM_FULL = 0x6D,
	QF_PROTO_RET_EXIST_ID = 0x6E,
	QF_PROTO_RET_FACE_TEMPLATE_LIMIT = 0x72,
	QF_PROTO_RET_CONTINUE = 0x74,
	QF_PROTO_RET_UNSUPPORTED = 0x75,
	QF_PROTO_RET_INVALID_ID = 0x76,
	QF_PROTO_RET_TIMEOUT_MATCH = 0x7A,
	QF_PROTO_RET_INVALID_FIRMWARE = 0x7C,
	QF_PROTO_RET_BUSY = 0x80,
	QF_PROTO_RET_CANCELED = 0x81,
	QF_PROTO_RET_DATA_ERROR = 0x82,
	QF_PROTO_RET_DATA_OK = 0x83,
	QF_PROTO_RET_EXIST_FACE = 0x86,
	QF_PROTO_RET_REJECTED_ID = 0x90,
	QF_PROTO_RET_NO_SERIAL_NUMBER = 0xA2,
	QF_PROTO_RET_FAKE_DETECTED = 0xB0,
	QF_PROTO_RET_INVALID_DATABASE_FORMAT = 0xB2,
	QF_PROTO_RET_WRONG_IMAGE_FORMAT = 0xB3,
	QF_PROTO_RET_WRONG_IMAGE_SIZE = 0XB4,

} QF_PROTOCOL_RET_CODE;

#endif
